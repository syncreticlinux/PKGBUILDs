From ca037af6ca91733e1cd5804be6e05db5bcf637b7 Mon Sep 17 00:00:00 2001
From: Adriaan de Groot <groot@kde.org>
Date: Sat, 30 Sep 2017 16:48:37 +0200
Subject: [PATCH 1/4] KPMCore: update required version to 3.2

 - drop extra checks for blkid and atasmart, those are kpmcore's
   concern, not ours (and it might have other backends, anyway)
---
 src/modules/partition/CMakeLists.txt | 15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

diff --git a/src/modules/partition/CMakeLists.txt b/src/modules/partition/CMakeLists.txt
index 1ea69c027..8509ec25d 100644
--- a/src/modules/partition/CMakeLists.txt
+++ b/src/modules/partition/CMakeLists.txt
@@ -8,20 +8,7 @@ find_package( KF5 REQUIRED CoreAddons )
 # These are needed because KPMcore links publicly against ConfigCore, I18n, IconThemes, KIOCore and Service
 find_package( KF5 REQUIRED Config I18n IconThemes KIO Service )
 
-find_package( KPMcore 3.1.50 QUIET )
-if ( ${KPMcore_FOUND} )
-    add_definitions(-DWITH_KPMCORE22)
-endif()
-find_package( KPMcore 3.0.3 REQUIRED )
-find_library( atasmart_LIB atasmart )
-find_library( blkid_LIB blkid )
-if( NOT atasmart_LIB )
-  message( WARNING "atasmart library not found." )
-endif()
-if( NOT blkid_LIB )
-  message( WARNING "blkid library not found." )
-endif()
-
+find_package( KPMcore 3.2 REQUIRED )
 
 include_directories( ${KPMCORE_INCLUDE_DIR} )
 include_directories( ${PROJECT_BINARY_DIR}/src/libcalamaresui )

From 96c3f7def35d338b9eb66eff02efdae27569291c Mon Sep 17 00:00:00 2001
From: Adriaan de Groot <groot@kde.org>
Date: Sat, 30 Sep 2017 16:50:02 +0200
Subject: [PATCH 2/4] KPMCore: drop conditional code

---
 src/modules/partition/core/KPMHelpers.cpp         | 6 ------
 src/modules/partition/tests/PartitionJobTests.cpp | 2 --
 2 files changed, 8 deletions(-)

diff --git a/src/modules/partition/core/KPMHelpers.cpp b/src/modules/partition/core/KPMHelpers.cpp
index 6ed167eee..9f97d5e8c 100644
--- a/src/modules/partition/core/KPMHelpers.cpp
+++ b/src/modules/partition/core/KPMHelpers.cpp
@@ -116,9 +116,7 @@ createNewPartition( PartitionNode* parent,
                     PartitionTable::Flags flags )
 {
     FileSystem* fs = FileSystemFactory::create( fsType, firstSector, lastSector
-#ifdef WITH_KPMCORE22
                                                 ,device.logicalSize()
-#endif
     );
     return new Partition(
                parent,
@@ -153,9 +151,7 @@ createNewEncryptedPartition( PartitionNode* parent,
                            FileSystemFactory::create( FileSystem::Luks,
                                                       firstSector,
                                                       lastSector
-#ifdef WITH_KPMCORE22
                                                      ,device.logicalSize()
-#endif
                                                       ) );
     if ( !fs )
     {
@@ -186,9 +182,7 @@ clonePartition( Device* device, Partition* partition )
                          partition->fileSystem().type(),
                          partition->firstSector(),
                          partition->lastSector()
-#ifdef WITH_KPMCORE22
                         ,device->logicalSize()
-#endif
                      );
     return new Partition( partition->parent(),
                           *device,
diff --git a/src/modules/partition/tests/PartitionJobTests.cpp b/src/modules/partition/tests/PartitionJobTests.cpp
index 8702e0119..bd6962a85 100644
--- a/src/modules/partition/tests/PartitionJobTests.cpp
+++ b/src/modules/partition/tests/PartitionJobTests.cpp
@@ -219,9 +219,7 @@ PartitionJobTests::newCreatePartitionJob( Partition* freeSpacePartition, Partiti
     else
         lastSector = freeSpacePartition->lastSector();
     FileSystem* fs = FileSystemFactory::create( type, firstSector, lastSector
-#ifdef WITH_KPMCORE22
         ,m_device->logicalSize()
-#endif
     );
 
     Partition* partition = new Partition(

From ff2947060d59a069529fd37c81326b10930f4915 Mon Sep 17 00:00:00 2001
From: Adriaan de Groot <groot@kde.org>
Date: Sat, 30 Sep 2017 17:04:35 +0200
Subject: [PATCH 3/4] KPMCore: use the translation system for filesystem names
 from KPMCore

---
 .../partition/jobs/FillGlobalStorageJob.cpp        | 46 +---------------------
 1 file changed, 1 insertion(+), 45 deletions(-)

diff --git a/src/modules/partition/jobs/FillGlobalStorageJob.cpp b/src/modules/partition/jobs/FillGlobalStorageJob.cpp
index 443eb8b9e..1866ce96e 100644
--- a/src/modules/partition/jobs/FillGlobalStorageJob.cpp
+++ b/src/modules/partition/jobs/FillGlobalStorageJob.cpp
@@ -77,50 +77,6 @@ getLuksUuid( const QString& path )
     return uuid;
 }
 
-// TODO: this will be available from KPMCore soon
-static const char* filesystem_labels[] = {
-    "unknown",
-    "extended",
-
-    "ext2",
-    "ext3",
-    "ext4",
-    "linuxswap",
-    "fat16",
-    "fat32",
-    "ntfs",
-    "reiser",
-    "reiser4",
-    "xfs",
-    "jfs",
-    "hfs",
-    "hfsplus",
-    "ufs",
-    "unformatted",
-    "btrfs",
-    "hpfs",
-    "luks",
-    "ocfs2",
-    "zfs",
-    "exfat",
-    "nilfs2",
-    "lvm2 pv",
-    "f2fs",
-    "udf",
-    "iso9660",
-};
-
-Q_STATIC_ASSERT_X((sizeof(filesystem_labels) / sizeof(char *)) >= FileSystem::__lastType, "Mismatch in filesystem labels");
-
-static QString
-untranslatedTypeName(FileSystem::Type t)
-{
-
-    Q_ASSERT( t >= 0 );
-    Q_ASSERT( t <= FileSystem::__lastType );
-
-    return QLatin1String(filesystem_labels[t]);
-}
 
 static QVariant
 mapForPartition( Partition* partition, const QString& uuid )
@@ -129,7 +85,7 @@ mapForPartition( Partition* partition, const QString& uuid )
     map[ "device" ] = partition->partitionPath();
     map[ "mountPoint" ] = PartitionInfo::mountPoint( partition );
     map[ "fsName" ] = partition->fileSystem().name();
-    map[ "fs" ] = untranslatedTypeName( partition->fileSystem().type() );
+    map[ "fs" ] = partition->fileSystem().name( QStringLiteral("C") );  // Untranslated
     if ( partition->fileSystem().type() == FileSystem::Luks &&
          dynamic_cast< FS::luks& >( partition->fileSystem() ).innerFS() )
         map[ "fs" ] = dynamic_cast< FS::luks& >( partition->fileSystem() ).innerFS()->name();

From 9f05c236d8813837bda4b4e71cf6710c8bdc833b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andrius=20=C5=A0tikonas?= <andrius@stikonas.eu>
Date: Sat, 30 Sep 2017 16:27:07 +0100
Subject: [PATCH 4/4] KPMcore: Pass QStringList to fs->name() instead of
 QString.

---
 src/modules/partition/jobs/FillGlobalStorageJob.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/modules/partition/jobs/FillGlobalStorageJob.cpp b/src/modules/partition/jobs/FillGlobalStorageJob.cpp
index 1866ce96e..a3d709b5b 100644
--- a/src/modules/partition/jobs/FillGlobalStorageJob.cpp
+++ b/src/modules/partition/jobs/FillGlobalStorageJob.cpp
@@ -85,7 +85,7 @@ mapForPartition( Partition* partition, const QString& uuid )
     map[ "device" ] = partition->partitionPath();
     map[ "mountPoint" ] = PartitionInfo::mountPoint( partition );
     map[ "fsName" ] = partition->fileSystem().name();
-    map[ "fs" ] = partition->fileSystem().name( QStringLiteral("C") );  // Untranslated
+    map[ "fs" ] = partition->fileSystem().name( { QStringLiteral("C") } );  // Untranslated
     if ( partition->fileSystem().type() == FileSystem::Luks &&
          dynamic_cast< FS::luks& >( partition->fileSystem() ).innerFS() )
         map[ "fs" ] = dynamic_cast< FS::luks& >( partition->fileSystem() ).innerFS()->name();
